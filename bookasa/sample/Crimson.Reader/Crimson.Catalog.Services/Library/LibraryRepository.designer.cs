#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Crimson.Catalog.Services
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	internal partial class LibraryRepositoryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertBookCreator(BookCreator instance);
    partial void UpdateBookCreator(BookCreator instance);
    partial void DeleteBookCreator(BookCreator instance);
    partial void InsertCreator(Creator instance);
    partial void UpdateCreator(Creator instance);
    partial void DeleteCreator(Creator instance);
    #endregion
		
		public LibraryRepositoryDataContext() : 
				base(global::Crimson.Catalog.Services.Properties.Settings.Default.DataSourceConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryRepositoryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryRepositoryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryRepositoryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryRepositoryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<BookCreator> BookCreators
		{
			get
			{
				return this.GetTable<BookCreator>();
			}
		}
		
		public System.Data.Linq.Table<Creator> Creators
		{
			get
			{
				return this.GetTable<Creator>();
			}
		}
		
		[Function(Name="CrimsonReader.CreateCatalog")]
		public int CreateCatalog([Parameter(Name="CatalogId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> catalogId, [Parameter(Name="Name", DbType="NVarChar(100)")] string name, [Parameter(Name="Uri", DbType="NVarChar(512)")] string uri, [Parameter(Name="Created", DbType="DateTime")] System.Nullable<System.DateTime> created, [Parameter(Name="CatalogUri", DbType="NVarChar(512)")] string catalogUri, [Parameter(Name="CatalogType", DbType="NVarChar(50)")] string catalogType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), catalogId, name, uri, created, catalogUri, catalogType);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="CrimsonReader.UpdateCatalog")]
		public int UpdateCatalog([Parameter(Name="CatalogId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> catalogId, [Parameter(Name="Name", DbType="NVarChar(100)")] string name, [Parameter(Name="Uri", DbType="NVarChar(512)")] string uri, [Parameter(Name="Created", DbType="DateTime")] System.Nullable<System.DateTime> created, [Parameter(Name="CatalogUri", DbType="NVarChar(512)")] string catalogUri, [Parameter(Name="CatalogType", DbType="NVarChar(50)")] string catalogType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), catalogId, name, uri, created, catalogUri, catalogType);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="CrimsonReader.DeleteCatalog")]
		public int DeleteCatalog([Parameter(Name="CatalogId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> catalogId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), catalogId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="CrimsonReader.GetCreator", IsComposable=true)]
		public IQueryable<GetCreatorResult> GetCreator([Parameter(Name="CreatorId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> creatorId)
		{
			return this.CreateMethodCallQuery<GetCreatorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), creatorId);
		}
		
		[Function(Name="CrimsonReader.GetBookCreator", IsComposable=true)]
		public IQueryable<GetBookCreatorResult> GetBookCreator([Parameter(Name="BookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bookId)
		{
			return this.CreateMethodCallQuery<GetBookCreatorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bookId);
		}
		
		[Function(Name="CrimsonReader.GetCatalog", IsComposable=true)]
		public IQueryable<GetCatalogResult> GetCatalog()
		{
			return this.CreateMethodCallQuery<GetCatalogResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
		
		[Function(Name="CrimsonReader.CreateBook")]
		public int CreateBook([Parameter(Name="BookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bookId, [Parameter(Name="CatalogId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> catalogId, [Parameter(Name="BookCatalogId", DbType="NVarChar(20)")] string bookCatalogId, [Parameter(Name="Title", DbType="NVarChar(512)")] string title, [Parameter(Name="AlternateTitle", DbType="NVarChar(512)")] string alternateTitle, [Parameter(Name="FriendlyTitle", DbType="NVarChar(512)")] string friendlyTitle, [Parameter(Name="Created", DbType="Date")] System.Nullable<System.DateTime> created, [Parameter(Name="Modified", DbType="Date")] System.Nullable<System.DateTime> modified)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bookId, catalogId, bookCatalogId, title, alternateTitle, friendlyTitle, created, modified);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="CrimsonReader.DeleteBook")]
		public int DeleteBook([Parameter(Name="BookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bookId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bookId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="CrimsonReader.GetBooksByCreator", IsComposable=true)]
		public IQueryable<GetBooksByCreatorResult> GetBooksByCreator([Parameter(Name="FullName", DbType="NVarChar(100)")] string fullName)
		{
			return this.CreateMethodCallQuery<GetBooksByCreatorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fullName);
		}
		
		[Function(Name="CrimsonReader.GetBook", IsComposable=true)]
		public IQueryable<GetBookResult> GetBook([Parameter(Name="BookId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bookId)
		{
			return this.CreateMethodCallQuery<GetBookResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bookId);
		}
		
		[Function(Name="CrimsonReader.GetBooksByTitle", IsComposable=true)]
		public IQueryable<GetBooksByTitleResult> GetBooksByTitle([Parameter(Name="Title", DbType="NVarChar(512)")] string title)
		{
			return this.CreateMethodCallQuery<GetBooksByTitleResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), title);
		}
		
		[Function(Name="CrimsonReader.GetAPIKey", IsComposable=true)]
		public IQueryable<GetAPIKeyResult> GetAPIKey()
		{
			return this.CreateMethodCallQuery<GetAPIKeyResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
	}
	
	[Table(Name="CrimsonReader.Book")]
	[DataContract()]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BookId;
		
		private System.Guid _CatalogId;
		
		private string _BookCatalogId;
		
		private string _Title;
		
		private string _AlternateTitle;
		
		private string _FriendlyTitle;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private EntitySet<BookCreator> _BookCreators;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIdChanging(System.Guid value);
    partial void OnBookIdChanged();
    partial void OnCatalogIdChanging(System.Guid value);
    partial void OnCatalogIdChanged();
    partial void OnBookCatalogIdChanging(string value);
    partial void OnBookCatalogIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAlternateTitleChanging(string value);
    partial void OnAlternateTitleChanged();
    partial void OnFriendlyTitleChanging(string value);
    partial void OnFriendlyTitleChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    #endregion
		
		public Book()
		{
			this.Initialize();
		}
		
		[Column(Storage="_BookId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[Column(Storage="_CatalogId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid CatalogId
		{
			get
			{
				return this._CatalogId;
			}
			set
			{
				if ((this._CatalogId != value))
				{
					this.OnCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._CatalogId = value;
					this.SendPropertyChanged("CatalogId");
					this.OnCatalogIdChanged();
				}
			}
		}
		
		[Column(Storage="_BookCatalogId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string BookCatalogId
		{
			get
			{
				return this._BookCatalogId;
			}
			set
			{
				if ((this._BookCatalogId != value))
				{
					this.OnBookCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._BookCatalogId = value;
					this.SendPropertyChanged("BookCatalogId");
					this.OnBookCatalogIdChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(512)")]
		[DataMember(Order=4)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_AlternateTitle", DbType="NVarChar(512)")]
		[DataMember(Order=5)]
		public string AlternateTitle
		{
			get
			{
				return this._AlternateTitle;
			}
			set
			{
				if ((this._AlternateTitle != value))
				{
					this.OnAlternateTitleChanging(value);
					this.SendPropertyChanging();
					this._AlternateTitle = value;
					this.SendPropertyChanged("AlternateTitle");
					this.OnAlternateTitleChanged();
				}
			}
		}
		
		[Column(Storage="_FriendlyTitle", DbType="NVarChar(512)")]
		[DataMember(Order=6)]
		public string FriendlyTitle
		{
			get
			{
				return this._FriendlyTitle;
			}
			set
			{
				if ((this._FriendlyTitle != value))
				{
					this.OnFriendlyTitleChanging(value);
					this.SendPropertyChanging();
					this._FriendlyTitle = value;
					this.SendPropertyChanged("FriendlyTitle");
					this.OnFriendlyTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Created", DbType="Date NOT NULL")]
		[DataMember(Order=7)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Modified", DbType="Date NOT NULL")]
		[DataMember(Order=8)]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[Association(Name="Book_BookCreator", Storage="_BookCreators", ThisKey="BookId", OtherKey="BookId")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<BookCreator> BookCreators
		{
			get
			{
				if ((this.serializing 
							&& (this._BookCreators.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BookCreators;
			}
			set
			{
				this._BookCreators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookCreators(BookCreator entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_BookCreators(BookCreator entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void Initialize()
		{
			this._BookCreators = new EntitySet<BookCreator>(new Action<BookCreator>(this.attach_BookCreators), new Action<BookCreator>(this.detach_BookCreators));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="CrimsonReader.BookCreator")]
	[DataContract()]
	public partial class BookCreator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BookId;
		
		private System.Guid _CreatorId;
		
		private bool _Contributor;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Creator> _Creator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIdChanging(System.Guid value);
    partial void OnBookIdChanged();
    partial void OnCreatorIdChanging(System.Guid value);
    partial void OnCreatorIdChanged();
    partial void OnContributorChanging(bool value);
    partial void OnContributorChanged();
    #endregion
		
		public BookCreator()
		{
			this.Initialize();
		}
		
		[Column(Storage="_BookId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public System.Guid CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					if (this._Creator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorId = value;
					this.SendPropertyChanged("CreatorId");
					this.OnCreatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_Contributor", DbType="Bit NOT NULL")]
		[DataMember(Order=3)]
		public bool Contributor
		{
			get
			{
				return this._Contributor;
			}
			set
			{
				if ((this._Contributor != value))
				{
					this.OnContributorChanging(value);
					this.SendPropertyChanging();
					this._Contributor = value;
					this.SendPropertyChanged("Contributor");
					this.OnContributorChanged();
				}
			}
		}
		
		[Association(Name="Book_BookCreator", Storage="_Book", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.BookCreators.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.BookCreators.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(System.Guid);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[Association(Name="Creator_BookCreator", Storage="_Creator", ThisKey="CreatorId", OtherKey="CreatorId", IsForeignKey=true)]
		public Creator Creator
		{
			get
			{
				return this._Creator.Entity;
			}
			set
			{
				Creator previousValue = this._Creator.Entity;
				if (((previousValue != value) 
							|| (this._Creator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Creator.Entity = null;
						previousValue.BookCreators.Remove(this);
					}
					this._Creator.Entity = value;
					if ((value != null))
					{
						value.BookCreators.Add(this);
						this._CreatorId = value.CreatorId;
					}
					else
					{
						this._CreatorId = default(System.Guid);
					}
					this.SendPropertyChanged("Creator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Book = default(EntityRef<Book>);
			this._Creator = default(EntityRef<Creator>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="CrimsonReader.Creator")]
	[DataContract()]
	public partial class Creator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CreatorId;
		
		private string _Fullname;
		
		private string _LastName;
		
		private string _GivenName;
		
		private string _DisplayName;
		
		private string _Born;
		
		private string _Died;
		
		private string _WikiPediaUri;
		
		private EntitySet<BookCreator> _BookCreators;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreatorIdChanging(System.Guid value);
    partial void OnCreatorIdChanged();
    partial void OnFullnameChanging(string value);
    partial void OnFullnameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGivenNameChanging(string value);
    partial void OnGivenNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnBornChanging(string value);
    partial void OnBornChanged();
    partial void OnDiedChanging(string value);
    partial void OnDiedChanged();
    partial void OnWikiPediaUriChanging(string value);
    partial void OnWikiPediaUriChanged();
    #endregion
		
		public Creator()
		{
			this.Initialize();
		}
		
		[Column(Storage="_CreatorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					this.OnCreatorIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorId = value;
					this.SendPropertyChanged("CreatorId");
					this.OnCreatorIdChanged();
				}
			}
		}
		
		[Column(Storage="_Fullname", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this.OnFullnameChanging(value);
					this.SendPropertyChanging();
					this._Fullname = value;
					this.SendPropertyChanged("Fullname");
					this.OnFullnameChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_GivenName", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this.OnGivenNameChanging(value);
					this.SendPropertyChanging();
					this._GivenName = value;
					this.SendPropertyChanged("GivenName");
					this.OnGivenNameChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_Born", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string Born
		{
			get
			{
				return this._Born;
			}
			set
			{
				if ((this._Born != value))
				{
					this.OnBornChanging(value);
					this.SendPropertyChanging();
					this._Born = value;
					this.SendPropertyChanged("Born");
					this.OnBornChanged();
				}
			}
		}
		
		[Column(Storage="_Died", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string Died
		{
			get
			{
				return this._Died;
			}
			set
			{
				if ((this._Died != value))
				{
					this.OnDiedChanging(value);
					this.SendPropertyChanging();
					this._Died = value;
					this.SendPropertyChanged("Died");
					this.OnDiedChanged();
				}
			}
		}
		
		[Column(Storage="_WikiPediaUri", DbType="NVarChar(512)")]
		[DataMember(Order=8)]
		public string WikiPediaUri
		{
			get
			{
				return this._WikiPediaUri;
			}
			set
			{
				if ((this._WikiPediaUri != value))
				{
					this.OnWikiPediaUriChanging(value);
					this.SendPropertyChanging();
					this._WikiPediaUri = value;
					this.SendPropertyChanged("WikiPediaUri");
					this.OnWikiPediaUriChanged();
				}
			}
		}
		
		[Association(Name="Creator_BookCreator", Storage="_BookCreators", ThisKey="CreatorId", OtherKey="CreatorId")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<BookCreator> BookCreators
		{
			get
			{
				if ((this.serializing 
							&& (this._BookCreators.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BookCreators;
			}
			set
			{
				this._BookCreators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookCreators(BookCreator entity)
		{
			this.SendPropertyChanging();
			entity.Creator = this;
		}
		
		private void detach_BookCreators(BookCreator entity)
		{
			this.SendPropertyChanging();
			entity.Creator = null;
		}
		
		private void Initialize()
		{
			this._BookCreators = new EntitySet<BookCreator>(new Action<BookCreator>(this.attach_BookCreators), new Action<BookCreator>(this.detach_BookCreators));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[DataContract()]
	public partial class GetCreatorResult
	{
		
		private System.Guid _CreatorId;
		
		private string _Fullname;
		
		private string _LastName;
		
		private string _GivenName;
		
		private string _DisplayName;
		
		private string _Born;
		
		private string _Died;
		
		private string _WikiPediaUri;
		
		public GetCreatorResult()
		{
		}
		
		[Column(Storage="_CreatorId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					this._CreatorId = value;
				}
			}
		}
		
		[Column(Storage="_Fullname", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this._Fullname = value;
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[Column(Storage="_GivenName", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this._GivenName = value;
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[Column(Storage="_Born", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string Born
		{
			get
			{
				return this._Born;
			}
			set
			{
				if ((this._Born != value))
				{
					this._Born = value;
				}
			}
		}
		
		[Column(Storage="_Died", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string Died
		{
			get
			{
				return this._Died;
			}
			set
			{
				if ((this._Died != value))
				{
					this._Died = value;
				}
			}
		}
		
		[Column(Storage="_WikiPediaUri", DbType="NVarChar(512)")]
		[DataMember(Order=8)]
		public string WikiPediaUri
		{
			get
			{
				return this._WikiPediaUri;
			}
			set
			{
				if ((this._WikiPediaUri != value))
				{
					this._WikiPediaUri = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class GetBookCreatorResult
	{
		
		private System.Guid _CreatorId;
		
		private string _Fullname;
		
		private string _LastName;
		
		private string _GivenName;
		
		private string _DisplayName;
		
		private string _Born;
		
		private string _Died;
		
		private string _WikiPediaUri;
		
		public GetBookCreatorResult()
		{
		}
		
		[Column(Storage="_CreatorId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					this._CreatorId = value;
				}
			}
		}
		
		[Column(Storage="_Fullname", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this._Fullname = value;
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[Column(Storage="_GivenName", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this._GivenName = value;
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[Column(Storage="_Born", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string Born
		{
			get
			{
				return this._Born;
			}
			set
			{
				if ((this._Born != value))
				{
					this._Born = value;
				}
			}
		}
		
		[Column(Storage="_Died", DbType="NVarChar(50)")]
		[DataMember(Order=7)]
		public string Died
		{
			get
			{
				return this._Died;
			}
			set
			{
				if ((this._Died != value))
				{
					this._Died = value;
				}
			}
		}
		
		[Column(Storage="_WikiPediaUri", DbType="NVarChar(512)")]
		[DataMember(Order=8)]
		public string WikiPediaUri
		{
			get
			{
				return this._WikiPediaUri;
			}
			set
			{
				if ((this._WikiPediaUri != value))
				{
					this._WikiPediaUri = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class GetCatalogResult
	{
		
		private System.Guid _CatalogId;
		
		private string _Name;
		
		private string _Uri;
		
		private System.DateTime _Created;
		
		private string _CatalogUri;
		
		private string _CatalogType;
		
		public GetCatalogResult()
		{
		}
		
		[Column(Storage="_CatalogId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid CatalogId
		{
			get
			{
				return this._CatalogId;
			}
			set
			{
				if ((this._CatalogId != value))
				{
					this._CatalogId = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Uri", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this._Uri = value;
				}
			}
		}
		
		[Column(Storage="_Created", DbType="DateTime NOT NULL")]
		[DataMember(Order=4)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[Column(Storage="_CatalogUri", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string CatalogUri
		{
			get
			{
				return this._CatalogUri;
			}
			set
			{
				if ((this._CatalogUri != value))
				{
					this._CatalogUri = value;
				}
			}
		}
		
		[Column(Storage="_CatalogType", DbType="NVarChar(50)")]
		[DataMember(Order=6)]
		public string CatalogType
		{
			get
			{
				return this._CatalogType;
			}
			set
			{
				if ((this._CatalogType != value))
				{
					this._CatalogType = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class GetBooksByCreatorResult
	{
		
		private System.Guid _BookId;
		
		private System.Guid _CatalogId;
		
		private string _BookCatalogId;
		
		private string _Title;
		
		private string _AlternateTitle;
		
		private string _FriendlyTitle;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _CreatorId;
		
		private string _FullName;
		
		private string _LastName;
		
		private string _GivenName;
		
		private string _DisplayName;
		
		private string _Born;
		
		private string _Died;
		
		private string _WikiPediaUri;
		
		public GetBooksByCreatorResult()
		{
		}
		
		[Column(Storage="_BookId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this._BookId = value;
				}
			}
		}
		
		[Column(Storage="_CatalogId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid CatalogId
		{
			get
			{
				return this._CatalogId;
			}
			set
			{
				if ((this._CatalogId != value))
				{
					this._CatalogId = value;
				}
			}
		}
		
		[Column(Storage="_BookCatalogId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string BookCatalogId
		{
			get
			{
				return this._BookCatalogId;
			}
			set
			{
				if ((this._BookCatalogId != value))
				{
					this._BookCatalogId = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(512)")]
		[DataMember(Order=4)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_AlternateTitle", DbType="NVarChar(512)")]
		[DataMember(Order=5)]
		public string AlternateTitle
		{
			get
			{
				return this._AlternateTitle;
			}
			set
			{
				if ((this._AlternateTitle != value))
				{
					this._AlternateTitle = value;
				}
			}
		}
		
		[Column(Storage="_FriendlyTitle", DbType="NVarChar(512)")]
		[DataMember(Order=6)]
		public string FriendlyTitle
		{
			get
			{
				return this._FriendlyTitle;
			}
			set
			{
				if ((this._FriendlyTitle != value))
				{
					this._FriendlyTitle = value;
				}
			}
		}
		
		[Column(Storage="_Created", DbType="Date NOT NULL")]
		[DataMember(Order=7)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[Column(Storage="_Modified", DbType="Date NOT NULL")]
		[DataMember(Order=8)]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this._Modified = value;
				}
			}
		}
		
		[Column(Storage="_CreatorId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=9)]
		public System.Guid CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					this._CreatorId = value;
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=11)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[Column(Storage="_GivenName", DbType="NVarChar(100)")]
		[DataMember(Order=12)]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this._GivenName = value;
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[DataMember(Order=13)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[Column(Storage="_Born", DbType="NVarChar(50)")]
		[DataMember(Order=14)]
		public string Born
		{
			get
			{
				return this._Born;
			}
			set
			{
				if ((this._Born != value))
				{
					this._Born = value;
				}
			}
		}
		
		[Column(Storage="_Died", DbType="NVarChar(50)")]
		[DataMember(Order=15)]
		public string Died
		{
			get
			{
				return this._Died;
			}
			set
			{
				if ((this._Died != value))
				{
					this._Died = value;
				}
			}
		}
		
		[Column(Storage="_WikiPediaUri", DbType="NVarChar(512)")]
		[DataMember(Order=16)]
		public string WikiPediaUri
		{
			get
			{
				return this._WikiPediaUri;
			}
			set
			{
				if ((this._WikiPediaUri != value))
				{
					this._WikiPediaUri = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class GetBookResult
	{
		
		private System.Guid _BookId;
		
		private System.Guid _CatalogId;
		
		private string _BookCatalogId;
		
		private string _Title;
		
		private string _AlternateTitle;
		
		private string _FriendlyTitle;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		public GetBookResult()
		{
		}
		
		[Column(Storage="_BookId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this._BookId = value;
				}
			}
		}
		
		[Column(Storage="_CatalogId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid CatalogId
		{
			get
			{
				return this._CatalogId;
			}
			set
			{
				if ((this._CatalogId != value))
				{
					this._CatalogId = value;
				}
			}
		}
		
		[Column(Storage="_BookCatalogId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string BookCatalogId
		{
			get
			{
				return this._BookCatalogId;
			}
			set
			{
				if ((this._BookCatalogId != value))
				{
					this._BookCatalogId = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(512)")]
		[DataMember(Order=4)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_AlternateTitle", DbType="NVarChar(512)")]
		[DataMember(Order=5)]
		public string AlternateTitle
		{
			get
			{
				return this._AlternateTitle;
			}
			set
			{
				if ((this._AlternateTitle != value))
				{
					this._AlternateTitle = value;
				}
			}
		}
		
		[Column(Storage="_FriendlyTitle", DbType="NVarChar(512)")]
		[DataMember(Order=6)]
		public string FriendlyTitle
		{
			get
			{
				return this._FriendlyTitle;
			}
			set
			{
				if ((this._FriendlyTitle != value))
				{
					this._FriendlyTitle = value;
				}
			}
		}
		
		[Column(Storage="_Created", DbType="Date NOT NULL")]
		[DataMember(Order=7)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[Column(Storage="_Modified", DbType="Date NOT NULL")]
		[DataMember(Order=8)]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this._Modified = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class GetBooksByTitleResult
	{
		
		private System.Guid _BookId;
		
		private System.Guid _CatalogId;
		
		private string _BookCatalogId;
		
		private string _Title;
		
		private string _AlternateTitle;
		
		private string _FriendlyTitle;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private System.Guid _CreatorId;
		
		private string _FullName;
		
		private string _LastName;
		
		private string _GivenName;
		
		private string _DisplayName;
		
		private string _Born;
		
		private string _Died;
		
		private string _WikiPediaUri;
		
		public GetBooksByTitleResult()
		{
		}
		
		[Column(Storage="_BookId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this._BookId = value;
				}
			}
		}
		
		[Column(Storage="_CatalogId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=2)]
		public System.Guid CatalogId
		{
			get
			{
				return this._CatalogId;
			}
			set
			{
				if ((this._CatalogId != value))
				{
					this._CatalogId = value;
				}
			}
		}
		
		[Column(Storage="_BookCatalogId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string BookCatalogId
		{
			get
			{
				return this._BookCatalogId;
			}
			set
			{
				if ((this._BookCatalogId != value))
				{
					this._BookCatalogId = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(512)")]
		[DataMember(Order=4)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_AlternateTitle", DbType="NVarChar(512)")]
		[DataMember(Order=5)]
		public string AlternateTitle
		{
			get
			{
				return this._AlternateTitle;
			}
			set
			{
				if ((this._AlternateTitle != value))
				{
					this._AlternateTitle = value;
				}
			}
		}
		
		[Column(Storage="_FriendlyTitle", DbType="NVarChar(512)")]
		[DataMember(Order=6)]
		public string FriendlyTitle
		{
			get
			{
				return this._FriendlyTitle;
			}
			set
			{
				if ((this._FriendlyTitle != value))
				{
					this._FriendlyTitle = value;
				}
			}
		}
		
		[Column(Storage="_Created", DbType="Date NOT NULL")]
		[DataMember(Order=7)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[Column(Storage="_Modified", DbType="Date NOT NULL")]
		[DataMember(Order=8)]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this._Modified = value;
				}
			}
		}
		
		[Column(Storage="_CreatorId", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=9)]
		public System.Guid CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					this._CreatorId = value;
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=11)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[Column(Storage="_GivenName", DbType="NVarChar(100)")]
		[DataMember(Order=12)]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this._GivenName = value;
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[DataMember(Order=13)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[Column(Storage="_Born", DbType="NVarChar(50)")]
		[DataMember(Order=14)]
		public string Born
		{
			get
			{
				return this._Born;
			}
			set
			{
				if ((this._Born != value))
				{
					this._Born = value;
				}
			}
		}
		
		[Column(Storage="_Died", DbType="NVarChar(50)")]
		[DataMember(Order=15)]
		public string Died
		{
			get
			{
				return this._Died;
			}
			set
			{
				if ((this._Died != value))
				{
					this._Died = value;
				}
			}
		}
		
		[Column(Storage="_WikiPediaUri", DbType="NVarChar(512)")]
		[DataMember(Order=16)]
		public string WikiPediaUri
		{
			get
			{
				return this._WikiPediaUri;
			}
			set
			{
				if ((this._WikiPediaUri != value))
				{
					this._WikiPediaUri = value;
				}
			}
		}
	}
	
	[DataContract()]
	public partial class GetAPIKeyResult
	{
		
		private System.Guid _ApplicationID;
		
		private string _ApiKey;
		
		private string _Name;
		
		private string _Uri;
		
		public GetAPIKeyResult()
		{
		}
		
		[Column(Storage="_ApplicationID", DbType="UniqueIdentifier NOT NULL")]
		[DataMember(Order=1)]
		public System.Guid ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[Column(Storage="_ApiKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string ApiKey
		{
			get
			{
				return this._ApiKey;
			}
			set
			{
				if ((this._ApiKey != value))
				{
					this._ApiKey = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Uri", DbType="NVarChar(100)")]
		[DataMember(Order=4)]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this._Uri = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
